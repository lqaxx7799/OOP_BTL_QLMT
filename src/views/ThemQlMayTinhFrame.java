/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import dao.MayTinhDAO;
import dao.PhongHocDAO;
import dao.QlMayTinhDAO;
import java.awt.event.WindowEvent;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.MayTinh;
import models.PhongHoc;
import models.QlMayTinh;
import models.QlMayTinhPK;
import utils.Utils;

/**
 *
 * @author Admin
 */
public class ThemQlMayTinhFrame extends javax.swing.JFrame {

    private MayTinhDAO mayTinhDAO;
    private PhongHocDAO phongHocDAO;
    private QlMayTinhDAO qlMayTinhDAO;

    /**
     * Creates new form ThemQlMayTinhFrame
     */
    public ThemQlMayTinhFrame() {
        initComponents();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        mayTinhDAO = new MayTinhDAO();
        phongHocDAO = new PhongHocDAO();
        qlMayTinhDAO = new QlMayTinhDAO();

        loadCbxMaPhong();
        loadCbxSoHieu();
        resetForm();
        resetMayTinhForm();
    }
    
    private static void setSelectedValue(JComboBox comboBox, String value) {
        for (int i = 0; i < comboBox.getItemCount(); i++) {
            String item = (String) comboBox.getItemAt(i);
            String id = item.split("~")[0];
            if (id.equalsIgnoreCase(value)) {
                comboBox.setSelectedIndex(i);
                break;
            }
        }
    }

    private int getMaPhongHoc() {
        String selectedPhongHocStr = (String) cbxMaPhong.getSelectedItem();
        if (selectedPhongHocStr == null) {
            return -1;
        }
        String[] arr = selectedPhongHocStr.split("~");
        if (arr.length == 0) {
            return -1;
        }
        return Integer.parseInt(arr[0].trim());
    }

    private int getSoHieu() {
        String selectedSoHieuStr = (String) cbxSoHieu.getSelectedItem();
        if (selectedSoHieuStr == null) {
            return -1;
        }
        String[] arr = selectedSoHieuStr.split("~");
        if (arr.length == 0) {
            return -1;
        }
        return Integer.parseInt(arr[0].trim());
    }
    
    private void resetForm() {
        errMsg.setText("");
    }
    
    private void resetMayTinhForm() {
        txtSoLuong.setText("");
        txtTinhTrang.setText("");
        
        cbxSoHieu.setEnabled(false);
        txtSoLuong.setEnabled(false);
        txtTinhTrang.setEnabled(false);
        
        errSoHieu.setText("");
        errSoLuong.setText("");
        errTinhTrang.setText("");
        
        btnThem.setEnabled(true);
        btnSua.setEnabled(true);
        btnXoa.setEnabled(true);
        btnOk.setEnabled(false);
        btnHuy2.setEnabled(false);
    }

    public void loadCbxMaPhong() {
        cbxMaPhong.removeAllItems();
        List<PhongHoc> dsPhongHoc = phongHocDAO.getAll();
        for (PhongHoc phongHoc : dsPhongHoc) {
            cbxMaPhong.addItem(phongHoc.getMaPhong() + "~" + phongHoc.getTenPhong());
        }
    }

    public void loadCbxSoHieu() {
        cbxSoHieu.removeAllItems();
        List<MayTinh> dsMayTinh = mayTinhDAO.getAll();
        for (MayTinh mayTinh : dsMayTinh) {
            cbxSoHieu.addItem(mayTinh.getSoHieu() + "~" + mayTinh.getTen());
        }
    }

    public void loadTblMayTinh() {
        int selectedPhongHoc = getMaPhongHoc();
        if (selectedPhongHoc == -1) {
            return;
        }
        List<QlMayTinh> dsQlMayTinh = qlMayTinhDAO.getByMaPhongHoc(selectedPhongHoc);
        DefaultTableModel menuItemTableModel = (DefaultTableModel) tblMayTinh.getModel();
        for (int i = menuItemTableModel.getRowCount() - 1; i >= 0; i--) {
            menuItemTableModel.removeRow(i);
        }
        for (QlMayTinh item : dsQlMayTinh) {
            Object[] data = new Object[]{
                item.getMayTinh().getSoHieu(),
                item.getSoLuong(),
                item.getTinhTrang()
            };
            menuItemTableModel.addRow(data);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblMayTinh = new javax.swing.JTable();
        errTinhTrang = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cbxMaPhong = new javax.swing.JComboBox<>();
        cbxSoHieu = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTinhTrang = new javax.swing.JTextField();
        errSoHieu = new javax.swing.JLabel();
        errSoLuong = new javax.swing.JLabel();
        btnOk = new javax.swing.JButton();
        btnLuu = new javax.swing.JButton();
        btnHuy = new javax.swing.JButton();
        errMsg = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnHuy2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblMayTinh.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Số hiệu", "Số lượng", "Tình trạng"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblMayTinh);

        errTinhTrang.setForeground(new java.awt.Color(255, 0, 0));
        errTinhTrang.setText("jLabel6");

        jLabel1.setText("Số hiệu máy:");

        cbxMaPhong.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxMaPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxMaPhongActionPerformed(evt);
            }
        });

        cbxSoHieu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Mã phòng:");

        jLabel3.setText("Danh sách máy:");

        jLabel4.setText("Số lượng:");

        jLabel5.setText("Tình trạng:");

        errSoHieu.setForeground(new java.awt.Color(255, 0, 0));
        errSoHieu.setText("jLabel6");

        errSoLuong.setForeground(new java.awt.Color(255, 0, 0));
        errSoLuong.setText("jLabel6");

        btnOk.setText("OK");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnLuu.setText("Lưu");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        btnHuy.setText("Hủy");
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });

        errMsg.setForeground(new java.awt.Color(255, 0, 0));
        errMsg.setText("jLabel6");

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnHuy2.setText("Hủy");
        btnHuy2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuy2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnThem, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnSua, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnXoa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbxMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnOk)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnHuy2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnLuu)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnHuy))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(errMsg, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtTinhTrang)
                                            .addComponent(txtSoLuong)
                                            .addComponent(cbxSoHieu, 0, 142, Short.MAX_VALUE))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(errSoHieu, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                                    .addComponent(errSoLuong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(errTinhTrang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 70, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(17, 17, 17)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnThem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSua)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnXoa)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxSoHieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(errSoHieu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(errSoLuong))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTinhTrang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(errTinhTrang))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOk)
                    .addComponent(btnHuy2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(errMsg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLuu)
                    .addComponent(btnHuy))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbxMaPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxMaPhongActionPerformed
        loadTblMayTinh();
    }//GEN-LAST:event_cbxMaPhongActionPerformed

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        int soHieu = getSoHieu();
        String soLuongStr = txtSoLuong.getText();
        String tinhTrang = txtTinhTrang.getText();
        
        int soLuong = 0;
        
        boolean isValid = true;
        errSoHieu.setText("");
        errSoLuong.setText("");
        errTinhTrang.setText("");
        
        if (soLuongStr.equals("")) {
            isValid = false;
            errSoLuong.setText("Số lượng không được để trống");
        } else if (!Utils.checkIntegerNumberFormat(soLuongStr)) {
            isValid = false;
            errSoLuong.setText("Số lượng phải là số nguyên dương");
        } else {
            soLuong = Integer.parseInt(soLuongStr);
            if (soLuong <= 0) {
                isValid = false;
                errSoLuong.setText("Số lượng phải là số nguyên dương");
            }
        }
        
        if (tinhTrang.equals("")) {
            isValid = false;
            errTinhTrang.setText("Tình trạng không được để trống");
        }
        
        if (!isValid) {
            return;
        }
        
        PhongHoc phongHoc = phongHocDAO.getByMaPhong(getMaPhongHoc());
        DefaultTableModel menuItemTableModel = (DefaultTableModel) tblMayTinh.getModel();
        
        int tongSoMayTinh = 0;
        int viTriSoHieu = -1;
        for (int i = menuItemTableModel.getRowCount() - 1; i >= 0; i--) {
            int so = Integer.parseInt(tblMayTinh.getValueAt(i, 0).toString());
            if (so == soHieu) {
                viTriSoHieu = i;
                break;
            }
            tongSoMayTinh += Integer.parseInt(tblMayTinh.getValueAt(i, 1).toString());
        }
        
        if (tongSoMayTinh + soLuong > phongHoc.getSoMay()) {
            isValid = false;
            errSoLuong.setText("Số lượng vượt quá số máy trong phòng");
        }
        
        if (!isValid) {
            return;
        }
        
        Object[] data = new Object[]{
            soHieu,
            soLuong,
            tinhTrang
        };
        if (viTriSoHieu == -1) {
            menuItemTableModel.addRow(data);
        } else {
            menuItemTableModel.setValueAt(data[0], viTriSoHieu, 0);
            menuItemTableModel.setValueAt(data[1], viTriSoHieu, 1);
            menuItemTableModel.setValueAt(data[2], viTriSoHieu, 2);
        }
        resetMayTinhForm();
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        txtSoLuong.setText("");
        txtTinhTrang.setText("");
        
        cbxSoHieu.setEnabled(true);
        txtSoLuong.setEnabled(true);
        txtTinhTrang.setEnabled(true);
        
        errSoHieu.setText("");
        errSoLuong.setText("");
        errTinhTrang.setText("");
        
        btnThem.setEnabled(false);
        btnSua.setEnabled(false);
        btnXoa.setEnabled(false);
        btnOk.setEnabled(true);
        btnHuy2.setEnabled(true);
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        int selectedRowIndex = tblMayTinh.getSelectedRow();
        if (selectedRowIndex == -1) {
            JOptionPane.showMessageDialog(null, "Lỗi", "Vui lòng chọn một hàng trong bảng", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String soHieu = tblMayTinh.getValueAt(selectedRowIndex, 0).toString();
        String soLuong = tblMayTinh.getValueAt(selectedRowIndex, 1).toString();
        String tinhTrang = tblMayTinh.getValueAt(selectedRowIndex, 2).toString();
        
        setSelectedValue(cbxSoHieu, soHieu);
        txtSoLuong.setText(soLuong);
        txtTinhTrang.setText(tinhTrang);
        
        cbxSoHieu.setEnabled(true);
        txtSoLuong.setEnabled(true);
        txtTinhTrang.setEnabled(true);
        
        errSoHieu.setText("");
        errSoLuong.setText("");
        errTinhTrang.setText("");
        
        btnThem.setEnabled(false);
        btnSua.setEnabled(false);
        btnXoa.setEnabled(false);
        btnOk.setEnabled(true);
        btnHuy2.setEnabled(true);
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        int selectedRowIndex = tblMayTinh.getSelectedRow();
        if (selectedRowIndex == -1) {
            JOptionPane.showMessageDialog(null, "Lỗi", "Vui lòng chọn một hàng trong bảng", JOptionPane.ERROR_MESSAGE);
            return;
        }
        tblMayTinh.remove(selectedRowIndex);
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        boolean isValid = true;
        errMsg.setText("");
        
        PhongHoc phongHoc = phongHocDAO.getByMaPhong(getMaPhongHoc());
        
        DefaultTableModel menuItemTableModel = (DefaultTableModel) tblMayTinh.getModel();
        int tongSoMayTinh = 0;
        for (int i = menuItemTableModel.getRowCount() - 1; i >= 0; i--) {
            tongSoMayTinh += Integer.parseInt(tblMayTinh.getValueAt(i, 1).toString());
        }
        
        if (tongSoMayTinh < phongHoc.getSoMay()) {
            isValid = false;
            errMsg.setText("Tổng số máy tính phải bằng số máy trong phòng");
        }
        
        if (!isValid) {
            return;
        }
        
        for (int i = menuItemTableModel.getRowCount() - 1; i >= 0; i--) {
            int soHieu = Integer.parseInt(menuItemTableModel.getValueAt(i, 0).toString());
            int soLuong = Integer.parseInt(tblMayTinh.getValueAt(i, 1).toString());
            String tinhTrang = tblMayTinh.getValueAt(i, 2).toString();
            
            QlMayTinh qlMayTinh = qlMayTinhDAO.getById(new QlMayTinhPK(soHieu, phongHoc.getMaPhong()));
            if (qlMayTinh != null) {
                qlMayTinh.setSoLuong(soLuong);
                qlMayTinh.setTinhTrang(tinhTrang);
                qlMayTinhDAO.update(qlMayTinh);
            } else {
                qlMayTinh = new QlMayTinh(soHieu, phongHoc.getMaPhong());
                qlMayTinh.setSoLuong(soLuong);
                qlMayTinh.setTinhTrang(tinhTrang);
                qlMayTinhDAO.addNew(qlMayTinh);
            }
        }
        
        dispose();
    }//GEN-LAST:event_btnLuuActionPerformed

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
        dispose();
    }//GEN-LAST:event_btnHuyActionPerformed

    private void btnHuy2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuy2ActionPerformed
        resetMayTinhForm();
    }//GEN-LAST:event_btnHuy2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThemQlMayTinhFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThemQlMayTinhFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThemQlMayTinhFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThemQlMayTinhFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThemQlMayTinhFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHuy;
    private javax.swing.JButton btnHuy2;
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnOk;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbxMaPhong;
    private javax.swing.JComboBox<String> cbxSoHieu;
    private javax.swing.JLabel errMsg;
    private javax.swing.JLabel errSoHieu;
    private javax.swing.JLabel errSoLuong;
    private javax.swing.JLabel errTinhTrang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMayTinh;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTinhTrang;
    // End of variables declaration//GEN-END:variables
}
